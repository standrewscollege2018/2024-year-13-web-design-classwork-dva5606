{"version":3,"file":"_server.ts-BdfVgXSe.js","sources":["../../../.svelte-kit/adapter-node/entries/endpoints/api/chatgptResponse/_server.ts.js"],"sourcesContent":["import { OpenAI } from \"openai\";\nconst openai = new OpenAI({ apiKey: \"\" });\nlet questions = [];\nlet responses = [];\nlet frame = 0;\nasync function callgpt(question, base64Image) {\n  const completion = await openai.chat.completions.create({\n    model: \"gpt-4-turbo\",\n    messages: [\n      {\n        role: \"user\",\n        content: [\n          {\n            type: \"text\",\n            text: `${question}`\n          },\n          {\n            type: \"image_url\",\n            image_url: {\n              url: `data:image/jpeg;base64,${base64Image}`\n            }\n          }\n        ]\n      }\n    ],\n    max_tokens: 300\n  });\n  const answer = completion.choices[0].message.content;\n  if (answer) {\n    responses.push(answer);\n    return answer;\n  } else {\n    console.error(\"No answer received from OpenAI.\");\n    return \"No valid response was returned.\";\n  }\n}\nasync function genQuestion(question) {\n  frame += 1;\n  const userQuestion = question;\n  questions.push(userQuestion);\n  let messText;\n  if (frame !== 1) {\n    messText = \"Hello ChatGPT, please try to answer within 2-3 sentences where possible. You have been asked \";\n    for (let i = 0; i < questions.length - 1; i++) {\n      messText += questions[i] + \", \";\n    }\n    messText += \"' and have answered each with \";\n    for (let j = 0; j < responses.length; j++) {\n      messText += responses[j] + \" \";\n    }\n    messText += \"Please answer the current question of \" + userQuestion;\n  } else {\n    messText = userQuestion;\n  }\n  return messText;\n}\nasync function askQuestion(question, base64String) {\n  const altQuestion = await genQuestion(question);\n  return callgpt(altQuestion, base64String);\n}\nasync function POST({ request }) {\n  try {\n    const { question, base64Image } = await request.json();\n    const answer = await askQuestion(question, base64Image);\n    return new Response(JSON.stringify({ answer }), {\n      status: 200,\n      headers: { \"Content-Type\": \"application/json\" }\n    });\n  } catch (error) {\n    console.error(\"Error handling request:\", error);\n    return new Response(JSON.stringify({ message: \"Failed to process request.\" }), {\n      status: 500\n    });\n  }\n}\nexport {\n  POST\n};\n"],"names":[],"mappings":"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"}