import { SvelteComponentTyped } from "svelte";
declare class __sveltets_Render<T> {
    props(): {
        [x: string]: any;
        padding?: string | undefined;
        sort?: ((a: T, b: T) => number) | null | undefined;
        defaultDirection?: ("asc" | "desc") | undefined;
        defaultSort?: boolean | undefined;
        direction?: ("asc" | "desc" | null) | undefined;
    };
    events(): {
        click: MouseEvent;
        focus: FocusEvent;
        keydown: KeyboardEvent;
        keypress: KeyboardEvent;
        keyup: KeyboardEvent;
        mouseenter: MouseEvent;
        mouseleave: MouseEvent;
        mouseover: MouseEvent;
    } & {
        [evt: string]: CustomEvent<any>;
    };
    slots(): {
        default: {};
    };
}
export type TableHeadCellProps<T> = ReturnType<__sveltets_Render<T>['props']>;
export type TableHeadCellEvents<T> = ReturnType<__sveltets_Render<T>['events']>;
export type TableHeadCellSlots<T> = ReturnType<__sveltets_Render<T>['slots']>;
/**
 * [Go to docs](https://flowbite-svelte.com/)
 * ## Props
 * @prop export let padding: string = 'px-6 py-3';
 * @prop export let sort: ((a: T, b: T) => number) | null = null;
 * @prop export let defaultDirection: 'asc' | 'desc' = 'asc';
 * @prop export let defaultSort: boolean = false;
 * @prop export let direction: 'asc' | 'desc' | null = defaultSort ? defaultDirection : null;
 */
export default class TableHeadCell<T> extends SvelteComponentTyped<TableHeadCellProps<T>, TableHeadCellEvents<T>, TableHeadCellSlots<T>> {
}
export {};
